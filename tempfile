=======================================================
                      COMMAND LINE
=======================================================
motions
ctrl+A: beginning of line
ctrl+E: EoL

deletions
ctrl+k: all after cursor.
ctrl+u: all before cursor

Callings
![history_number_here]
!sass
sudo !!
cd !!

Get Help
aproposal (for installing)
man, info, tldr, help (for usage, commands, etc)

Useful Bits
locate, find: look for files.
grep: inside files.
wc 
mkdir -p ~/newdir1/newdir2 

Killing
kill PID
killall firefox #or any other program
ps -u, htop, top (for finding the ID)

Filters
grep, sort, awk, less
Filters usefulness comes from pipes (|). Examples:
ls -l | grep "Aug" | sort +4n |awk '{print $4} |  less 
'When we do not give a file to a filter, they take tha STDOUT as the input file.'

ENVIRONMENTAL VARIABLES
/usr/bin/env also (env) --> show environment variables. 
/etc/environment -> place to write variables
or in etc/profile using export
unset varName --> removes variables from environment or from shell 
#Bash aliases are an ubuntu invention. Normally they are on .bashrc and variables on .profile.
#In lubuntu anyways is ok to set aliases on bash_aliases


REDIRECTION 
When commands & bins run many things happen: stdin(0), stdout(1) and stderr(2) are open
An exit code is generated but not output. It is stored 
in the exit status '?=exit status'  accessed as $?, print using echo $?. 
Counter intuitive: 0 sucessful, unsucessful.

Chaining of commands using exit code
grep 'hello' bash_aliases && echo 'find it!' || echo 'didnt find it!'
ls -a ||  echo 'I like your mom'

Output redirection:
redirection of anything appearing on the terminal to a file: firefox-developer 2 > /dev/null

Processes: fg, bg, C-z
firefox-developer & # the ampersand sets it as a bg process.

============================================================
                             VIM
============================================================

motions
:n == nG --> moves cursor to line n (relative if using relnumber)
), ( -> for sentences
}, { -> for paragraphs (paragraphs in vim are denoted by a blank line!)
fchar, tchar =  forwart, till char.
CTRL+u != CTRL+d: move 1/2 screen + cursor (up or down).
ctrl+F (forward), ctrl+B (backward) : 1 full screen.
ctrl+E moves screen up keeping cursor on line
ctrl+y moves screen down keeping cursor on line.
L = lowest line on screen. 
H = Highest. 
M = Middle.
zz =  put current cursor-line in the middle of screen
zt, zb: cursor top or bottom.
0,^; $, g_ (caret and g_ only see text, not white spaces as chars).
d$=D != d^ 
*,# next/prev ocurrence of the current word.
% matching ({[
Playing with some macros
qq g_ d$ : deletes trailing white space on a line.

Marks


Superb characters for search a/o replace
*,^ line starts with, $ ends w 
>> != <<

========================================================================
                       BASH ======================================================================== PROGRAMMING variables=withnospaces variabless='more than one item'
variablessss="if we want to use a variable inside quotes then use double quotes $variabless"
arrays=(using parenthesis this is an array)
access element as arrays[i]
access arguments as a list $* or as a string $@
access script name with $0
define positional arguments on your script as echo $1 $2 $3
example:

myscript.sh
  echo $1 $2
./myscript.sh Santiago Miranda
>> Santiago Miranda 

=============================Installing a system=============================
Iso for a linux system can be found on http://cdimage.ubuntu.com/ (ubuntu based)
There are many ways to download for each flavor. Read the manual to look for a good one 
and avoid problems.
